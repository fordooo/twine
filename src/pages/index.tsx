import Head from "next/head";
import Image from "next/image";
import { SignInButton, UserButton, useUser } from "@clerk/nextjs";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;

  return (
    <div className="flex w-full gap-4">
      <Image
        src={user.imageUrl}
        alt={`@${user.username}'s profile picture`}
        className="h-14 w-14 rounded-full"
        width={56}
        height={56}
      />
      <input
        type="text"
        placeholder="Type something"
        className="grow bg-transparent outline-none"
      />
    </div>
  );
};

type PostsWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostsWithUser) => {
  const { post, author } = props;

  return (
    <div className="flex gap-4 border-b border-slate-400 p-4">
      <Image
        src={author.imageUrl}
        alt={`@${author.username}'s profile picture`}
        className="h-14 w-14 rounded-full"
        width={56}
        height={56}
      />
      <div className="flex flex-col">
        <div className="flex text-slate-300">
          <span>{`@${author.username}`}</span>
          <span
            title={dayjs(post.createdAt).format("h:mm A · MMM D, YYYY")}
          >{` · ${dayjs(post.createdAt).fromNow()}`}</span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  );
};

export default function Home() {
  const user = useUser();

  const { data: posts, isLoading } = api.posts.getAll.useQuery();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-400 md:max-w-2xl">
          <div className="flex flex-col">
            <div className="flex w-full justify-end gap-4 border-b border-slate-400 p-4">
              {user.isSignedIn ? (
                <>
                  <UserButton />
                  {user.user.fullName}
                </>
              ) : (
                <SignInButton />
              )}
            </div>
            <div className="flex border-b border-slate-400 p-4">
              {user.isSignedIn && <CreatePostWizard />}
            </div>
          </div>
          <div className="flex flex-col">
            {isLoading ? (
              <div>Loading...</div>
            ) : (
              <>
                {posts?.map(({ post, author }) => (
                  <PostView key={post.id} post={post} author={author} />
                ))}
              </>
            )}
          </div>
        </div>
      </main>
    </>
  );
}
