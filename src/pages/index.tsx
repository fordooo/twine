import { useState } from 'react'
import Head from 'next/head'
import Image from 'next/image'
import { SignInButton, UserButton, useUser } from '@clerk/nextjs'
import dayjs from 'dayjs'
import relativeTime from 'dayjs/plugin/relativeTime'
import { api } from '~/utils/api'
import type { RouterOutputs } from '~/utils/api'
import { LoadingSpinner } from '~/components/loading'

dayjs.extend(relativeTime)

const CreatePostWizard = () => {
  const { user } = useUser()
  const [input, setInput] = useState('')
  const ctx = api.useContext()

  const { mutate, isLoading: isPosting } = api.posts.create.useMutation({
    onSuccess: () => {
      setInput('')
      void ctx.posts.getAll.invalidate()
    }
  })

  if (!user) return null

  return (
    <div className="flex h-24 w-full items-center gap-4 border-b border-slate-400 p-4">
      <Image
        src={user.imageUrl}
        alt={`@${user.username}'s profile picture`}
        className="h-14 w-14 rounded-full"
        width={56}
        height={56}
      />
      <input
        type="text"
        placeholder="Type something"
        className="grow bg-transparent outline-none"
        value={input}
        onChange={(e) => setInput(e.target.value)}
        disabled={isPosting}
      />
      <button onClick={() => mutate({ content: input })}>Post</button>
    </div>
  )
}

type PostsWithUser = RouterOutputs['posts']['getAll'][number]

const PostView = (props: PostsWithUser) => {
  const { post, author } = props

  return (
    <div className="flex items-center gap-4 border-b border-slate-400 p-4">
      <Image
        src={author.imageUrl}
        alt={`@${author.username}'s profile picture`}
        className="h-14 w-14 rounded-full"
        width={56}
        height={56}
      />
      <div className="flex flex-col">
        <div className="flex gap-1 text-slate-300">
          <span>{`@${author.username}`}</span>
          <span>·</span>
          <span title={dayjs(post.createdAt).format('h:mm A · MMM D, YYYY')}>
            {dayjs(post.createdAt).fromNow()}
          </span>
        </div>
        <span className="text-2xl">{post.content}</span>
      </div>
    </div>
  )
}

const Feed = () => {
  const { data: posts, isLoading } = api.posts.getAll.useQuery()

  if (isLoading) {
    return (
      <div className="flex items-center justify-center p-8">
        <LoadingSpinner size={40} />
      </div>
    )
  }

  return (
    <>
      {posts?.map(({ post, author }) => (
        <PostView key={post.id} post={post} author={author} />
      ))}
    </>
  )
}

export default function Home() {
  const { user, isLoaded, isSignedIn } = useUser()

  // Start fetching posts ASAP
  api.posts.getAll.useQuery()

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex h-screen justify-center">
        <div className="flex h-full w-full flex-col border-x border-slate-400 md:max-w-2xl">
          <header className="flex h-16 w-full justify-end gap-4 border-b border-slate-400 p-4">
            {isSignedIn ? (
              <>
                <UserButton />
                {user.fullName}
              </>
            ) : (
              <SignInButton />
            )}
          </header>
          <main className="flex h-full w-full flex-col">
            {isSignedIn && <CreatePostWizard />}
            <Feed />
          </main>
        </div>
      </div>
    </>
  )
}
